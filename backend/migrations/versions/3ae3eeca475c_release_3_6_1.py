"""release 3.6.1

Revision ID: 3ae3eeca475c
Revises: bd4bea86de30
Create Date: 2021-11-29 07:30:10.790084

"""
import datetime

import sqlalchemy as sa
from alembic import op
from sqlalchemy import Boolean, Column, String, orm, DateTime
from sqlalchemy.dialects import postgresql
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import query_expression

from dataall.db import utils


# revision identifiers, used by Alembic.
revision = '3ae3eeca475c'
down_revision = 'bd4bea86de30'
branch_labels = None
depends_on = None

Base = declarative_base()


class Stack(Base):
    __tablename__ = 'stack'
    stackUri = Column(
        String, nullable=False, default=utils.uuid('stack'), primary_key=True
    )
    name = Column(String, nullable=True)
    targetUri = Column(String, nullable=False)
    accountid = Column(String, nullable=False)
    region = Column(String, nullable=False)
    cronexpr = Column(String, nullable=True)
    status = Column(String, nullable=False, default='pending')
    stack = Column(String, nullable=False)
    payload = Column(postgresql.JSON, nullable=True)
    created = Column(DateTime, default=datetime.datetime.now())
    updated = Column(DateTime, onupdate=datetime.datetime.now())
    stackid = Column(String)
    outputs = Column(postgresql.JSON)
    resources = Column(postgresql.JSON)
    error = Column(postgresql.JSON)
    events = Column(postgresql.JSON)
    lastSeen = Column(
        DateTime, default=lambda: datetime.datetime(year=1900, month=1, day=1)
    )
    EcsTaskArn = Column(String, nullable=True)


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    session = orm.Session(bind=bind)
    op.add_column('stack', sa.Column('name', sa.String(), nullable=True))
    print('Back filling stack names...')
    stacks: [Stack] = session.query(Stack).all()
    stack: Stack
    for stack in stacks:
        print(f'Back fill stack {stack.stackUri}...')
        stack.name = f'stack-{stack.stackUri}'
        session.commit()

    print('Successfully back filled stack names ')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('stack', 'name')
    # ### end Alembic commands ###
