"""release 3.7.1

Revision ID: 166af5c0355b
Revises: 2b40221043f1
Create Date: 2021-12-02 19:22:27.714326

"""
import datetime

from alembic import op
from sqlalchemy import Boolean, Column, String, DateTime, orm
from sqlalchemy.dialects import postgresql
from sqlalchemy.ext.declarative import declarative_base

from dataall.db import utils, Resource

# revision identifiers, used by Alembic.
from dataall.utils.naming_convention import (
    NamingConventionService,
    NamingConventionPattern,
)

revision = '166af5c0355b'
down_revision = '2b40221043f1'
branch_labels = None
depends_on = None

Base = declarative_base()


class Environment(Resource, Base):
    __tablename__ = 'environment'
    organizationUri = Column(String, nullable=False)
    environmentUri = Column(String, primary_key=True, default=utils.uuid('environment'))
    AwsAccountId = Column(String, nullable=False)
    region = Column(String, nullable=False, default='eu-west-1')
    cognitoGroupName = Column(String, nullable=True)
    resourcePrefix = Column(String, nullable=False, default='dh')
    validated = Column(Boolean, default=False)
    environmentType = Column(String, nullable=False, default='Data')
    isOrganizationDefaultEnvironment = Column(Boolean, default=False)
    EnvironmentDefaultIAMRoleName = Column(String, nullable=False)
    EnvironmentDefaultIAMRoleImported = Column(Boolean, default=False)
    EnvironmentDefaultIAMRoleArn = Column(String, nullable=False)
    EnvironmentDefaultBucketName = Column(String)
    EnvironmentDefaultAthenaWorkGroup = Column(String)
    roleCreated = Column(Boolean, nullable=False, default=False)
    dashboardsEnabled = Column(Boolean, default=False)
    notebooksEnabled = Column(Boolean, default=True)
    mlStudiosEnabled = Column(Boolean, default=True)
    pipelinesEnabled = Column(Boolean, default=True)
    warehousesEnabled = Column(Boolean, default=True)
    SamlGroupName = Column(String, nullable=True)
    CDKRoleArn = Column(String, nullable=False)
    subscriptionsEnabled = Column(Boolean, default=False)
    subscriptionsProducersTopicName = Column(String)
    subscriptionsProducersTopicImported = Column(Boolean, default=False)
    subscriptionsConsumersTopicName = Column(String)
    subscriptionsConsumersTopicImported = Column(Boolean, default=False)


class EnvironmentGroup(Base):
    __tablename__ = 'environment_group_permission'
    groupUri = Column(String, primary_key=True)
    environmentUri = Column(String, primary_key=True)
    invitedBy = Column(String, nullable=True)
    environmentIAMRoleArn = Column(String, nullable=True)
    environmentIAMRoleName = Column(String, nullable=True)
    environmentIAMRoleImported = Column(Boolean, default=False)
    environmentAthenaWorkGroup = Column(String, nullable=True)
    description = Column(String, default='No description provided')
    created = Column(DateTime, default=datetime.datetime.now)
    updated = Column(DateTime, onupdate=datetime.datetime.now)
    deleted = Column(DateTime)
    groupRoleInEnvironment = Column(String, nullable=False, default='Invited')


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    session = orm.Session(bind=bind)
    print('Back filling environments athena workgroup...')
    envs: [Environment] = session.query(Environment).all()
    env: Environment
    for env in envs:
        print(f'Back fill environment athena workgroup {env.label}...')
        env.EnvironmentDefaultAthenaWorkGroup = NamingConventionService(
            target_uri=env.environmentUri,
            target_label=env.label,
            pattern=NamingConventionPattern.DEFAULT,
            resource_prefix=env.resourcePrefix,
        ).build_compliant_name()
        session.commit()
        env_groups = session.query(EnvironmentGroup).all()
        env_group: EnvironmentGroup
        for env_group in env_groups:
            print(f'Back fill group athena workgroup {env_group.groupUri}...')
            env_group.environmentAthenaWorkGroup = NamingConventionService(
                target_uri=env.environmentUri,
                target_label=env_group.groupUri,
                pattern=NamingConventionPattern.DEFAULT,
                resource_prefix=env.resourcePrefix,
            ).build_compliant_name()

    session.commit()
    print('Successfully back filled athena workgroup names ')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###
